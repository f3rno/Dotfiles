*colorscheme-manager.txt*  Lightweight colorscheme manager

Author: Leonardo Valeri Manera [1]
License: Same terms as Vim itself (see |license|)

===============================================================================
Contents ~

 1. Introduction                            |colorscheme-manager-introduction|
 2. Commands                                    |colorscheme-manager-commands|
  1. The |:BlacklistAddColorScheme| command
  2. The |:BlacklistRemColorScheme| command
  3. The |:BlacklistPruneColorScheme| command
  4. The |:SwitchToColorScheme| command
 3. Options                                      |colorscheme-manager-options|
  1. The |g:colorscheme_manager_define_mappings| option
  2. The |g:colorscheme_manager_blacklist_direction| option
  3. The |g:colorscheme_manager_global_last| option
  4. The |g:ColorschemeManagerLast| option
 4. References                                |colorscheme-manager-references|

===============================================================================
                                            *colorscheme-manager-introduction*
Introduction ~

An add-on for vim-colorscheme-switcher [2].

- Convenience functions for managing the colorscheme blacklist.
- Automatically load last used colorscheme upon starting vim or
  (optionally) loading a session.
- Store last used colorscheme and blacklist on file, using tlib [3].

_Please note that the vim-colorscheme-manager plug-in requires the
vim-colorscheme-switcher [2] and vim-misc [3] plug-ins which must be installed
separately._

===============================================================================
                                                *colorscheme-manager-commands*
Commands ~

-------------------------------------------------------------------------------
The *:BlacklistAddColorScheme* command

Blacklist the current colorscheme and cycle forwards or backwards once.
See |g:colorscheme_manager_blacklist_direction| below.

Optionally, takes a colorscheme name as an argument, and operates on that
instead of the current one.

-------------------------------------------------------------------------------
The *:BlacklistRemColorScheme* command

Remove the current colorscheme from the blacklist.

Optionally, takes a colorscheme name as an argument, and operates on that
instead of the current one.

-------------------------------------------------------------------------------
The *:BlacklistPruneColorScheme* command

Removes non-existent (i.e. not in runtime path) colorschemes from blacklist.

-------------------------------------------------------------------------------
The *:SwitchToColorScheme* command

Syntactic sugar for |xolox#colorscheme_switcher#switch_to()|, takes a
colorscheme name as argument.

Useful for switching to a colorscheme you just installed with a plugin
manager, or to use as custom command for a colorscheme browser - for example,
unite.vim [4] with unite-colorscheme [5]

===============================================================================
                                                 *colorscheme-manager-options*
Options ~

The colorscheme manager plug-in should work out of the box, but you can
change the configuration defaults if you want to change how the plug-in works.

-------------------------------------------------------------------------------
The *g:colorscheme_manager_define_mappings* option

By default the plug-in maps the following keys in insert and normal mode:

- 'F9' adds the current colorscheme to the blacklist
- 'Shift-F9' removes the current colorscheme from the blacklist

To disable these mappings (e.g. because you're already using them for a
different purpose) you can set the option
|g:colorscheme_manager_define_mappings| to 0 (false) in your |vimrc| script.

-------------------------------------------------------------------------------
The *g:colorscheme_manager_blacklist_direction* option

By default the plug-in cycles forward one colorscheme when adding the current
one to the blacklist.

If you set this variable to 0 (false), it will instead cycle backwards.

-------------------------------------------------------------------------------
The *g:colorscheme_manager_global_last* option

By default the plug-in reads both blacklist and last colorscheme from file.

If you set this option to 1 (true) in your |vimrc|, a global variable will
take precedence unless empty.

Together with vim sessions with the option to store global variables enabled,
this allows you to have a different colorscheme for each vim session.

-------------------------------------------------------------------------------
The *g:ColorschemeManagerLast* option

This option is a string specifying the last the last used colorscheme.
It will be written to by the plug-in if |g:colorscheme_manager_global_last|
is 1 (true).

If |'sessionoptions'| contains "globals", |:mksession| will store this
variable in the session file.

-------------------------------------------------------------------------------
The *g:colorscheme_manager_file* option

The filename the plug-in will write its persistence data to.

Defaults to:

- '~/vimfiles/.colorscheme' on windows.
- '~/.vim/.colorscheme' everywhere else.

Set this to your preferred value in your |vimrc| to override the location.

===============================================================================
                                              *colorscheme-manager-references*
References ~

[1] http://github.com/Taverius
[2] http://github.com/xolox/vim-colorscheme-switcher
[3] http://github.com/xolox/vim-misc
[4] http://github.com/Shougo/unite.vim
[5] http://github.com/ujihisa/unite-colorscheme

 vim:tw=78:ts=8:ft=help:norl:
